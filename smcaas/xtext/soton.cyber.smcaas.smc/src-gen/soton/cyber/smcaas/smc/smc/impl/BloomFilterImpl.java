/**
 * generated by Xtext 2.12.0
 */
package soton.cyber.smcaas.smc.smc.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import soton.cyber.smcaas.smc.smc.BloomFilter;
import soton.cyber.smcaas.smc.smc.SmcPackage;
import soton.cyber.smcaas.smc.smc.VariableDecl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bloom Filter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link soton.cyber.smcaas.smc.smc.impl.BloomFilterImpl#getPre <em>Pre</em>}</li>
 *   <li>{@link soton.cyber.smcaas.smc.smc.impl.BloomFilterImpl#getPost <em>Post</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BloomFilterImpl extends FunctionsImpl implements BloomFilter
{
  /**
   * The cached value of the '{@link #getPre() <em>Pre</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPre()
   * @generated
   * @ordered
   */
  protected VariableDecl pre;

  /**
   * The cached value of the '{@link #getPost() <em>Post</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPost()
   * @generated
   * @ordered
   */
  protected VariableDecl post;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BloomFilterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmcPackage.Literals.BLOOM_FILTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl getPre()
  {
    if (pre != null && pre.eIsProxy())
    {
      InternalEObject oldPre = (InternalEObject)pre;
      pre = (VariableDecl)eResolveProxy(oldPre);
      if (pre != oldPre)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SmcPackage.BLOOM_FILTER__PRE, oldPre, pre));
      }
    }
    return pre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl basicGetPre()
  {
    return pre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPre(VariableDecl newPre)
  {
    VariableDecl oldPre = pre;
    pre = newPre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmcPackage.BLOOM_FILTER__PRE, oldPre, pre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl getPost()
  {
    if (post != null && post.eIsProxy())
    {
      InternalEObject oldPost = (InternalEObject)post;
      post = (VariableDecl)eResolveProxy(oldPost);
      if (post != oldPost)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SmcPackage.BLOOM_FILTER__POST, oldPost, post));
      }
    }
    return post;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl basicGetPost()
  {
    return post;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPost(VariableDecl newPost)
  {
    VariableDecl oldPost = post;
    post = newPost;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmcPackage.BLOOM_FILTER__POST, oldPost, post));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmcPackage.BLOOM_FILTER__PRE:
        if (resolve) return getPre();
        return basicGetPre();
      case SmcPackage.BLOOM_FILTER__POST:
        if (resolve) return getPost();
        return basicGetPost();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmcPackage.BLOOM_FILTER__PRE:
        setPre((VariableDecl)newValue);
        return;
      case SmcPackage.BLOOM_FILTER__POST:
        setPost((VariableDecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmcPackage.BLOOM_FILTER__PRE:
        setPre((VariableDecl)null);
        return;
      case SmcPackage.BLOOM_FILTER__POST:
        setPost((VariableDecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmcPackage.BLOOM_FILTER__PRE:
        return pre != null;
      case SmcPackage.BLOOM_FILTER__POST:
        return post != null;
    }
    return super.eIsSet(featureID);
  }

} //BloomFilterImpl
