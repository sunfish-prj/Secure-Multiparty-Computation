/**
 * generated by Xtext 2.12.0
 */
package soton.cyber.smcaas.smc.smc.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import soton.cyber.smcaas.smc.smc.SmcPackage;
import soton.cyber.smcaas.smc.smc.VariableDecl;
import soton.cyber.smcaas.smc.smc.WeightedAvg;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Weighted Avg</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link soton.cyber.smcaas.smc.smc.impl.WeightedAvgImpl#getWeights <em>Weights</em>}</li>
 *   <li>{@link soton.cyber.smcaas.smc.smc.impl.WeightedAvgImpl#getElems <em>Elems</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WeightedAvgImpl extends ComputationImpl implements WeightedAvg
{
  /**
   * The cached value of the '{@link #getWeights() <em>Weights</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWeights()
   * @generated
   * @ordered
   */
  protected VariableDecl weights;

  /**
   * The cached value of the '{@link #getElems() <em>Elems</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElems()
   * @generated
   * @ordered
   */
  protected VariableDecl elems;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WeightedAvgImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SmcPackage.Literals.WEIGHTED_AVG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl getWeights()
  {
    if (weights != null && weights.eIsProxy())
    {
      InternalEObject oldWeights = (InternalEObject)weights;
      weights = (VariableDecl)eResolveProxy(oldWeights);
      if (weights != oldWeights)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SmcPackage.WEIGHTED_AVG__WEIGHTS, oldWeights, weights));
      }
    }
    return weights;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl basicGetWeights()
  {
    return weights;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWeights(VariableDecl newWeights)
  {
    VariableDecl oldWeights = weights;
    weights = newWeights;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmcPackage.WEIGHTED_AVG__WEIGHTS, oldWeights, weights));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl getElems()
  {
    if (elems != null && elems.eIsProxy())
    {
      InternalEObject oldElems = (InternalEObject)elems;
      elems = (VariableDecl)eResolveProxy(oldElems);
      if (elems != oldElems)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SmcPackage.WEIGHTED_AVG__ELEMS, oldElems, elems));
      }
    }
    return elems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableDecl basicGetElems()
  {
    return elems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElems(VariableDecl newElems)
  {
    VariableDecl oldElems = elems;
    elems = newElems;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SmcPackage.WEIGHTED_AVG__ELEMS, oldElems, elems));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SmcPackage.WEIGHTED_AVG__WEIGHTS:
        if (resolve) return getWeights();
        return basicGetWeights();
      case SmcPackage.WEIGHTED_AVG__ELEMS:
        if (resolve) return getElems();
        return basicGetElems();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SmcPackage.WEIGHTED_AVG__WEIGHTS:
        setWeights((VariableDecl)newValue);
        return;
      case SmcPackage.WEIGHTED_AVG__ELEMS:
        setElems((VariableDecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SmcPackage.WEIGHTED_AVG__WEIGHTS:
        setWeights((VariableDecl)null);
        return;
      case SmcPackage.WEIGHTED_AVG__ELEMS:
        setElems((VariableDecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SmcPackage.WEIGHTED_AVG__WEIGHTS:
        return weights != null;
      case SmcPackage.WEIGHTED_AVG__ELEMS:
        return elems != null;
    }
    return super.eIsSet(featureID);
  }

} //WeightedAvgImpl
